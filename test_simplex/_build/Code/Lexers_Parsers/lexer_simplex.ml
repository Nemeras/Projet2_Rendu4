# 1 "Code/Lexers_Parsers/lexer_simplex.mll"
 
open Parser_simplex;;
open Num;;

# 7 "Code/Lexers_Parsers/lexer_simplex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\239\255\002\000\003\000\004\000\246\255\018\000\028\000\
    \024\000\001\000\011\000\252\255\253\255\254\255\255\255\251\255\
    \250\255\249\255\046\000\245\255\244\255\240\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\013\000\012\000\255\255\255\255\007\000\
    \014\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\008\000\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\014\000\014\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \012\000\011\000\000\000\005\000\000\000\000\000\000\000\009\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\015\000\000\000\004\000\008\000\003\000\021\000\
    \020\000\019\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\017\000\000\000\
    \000\000\000\000\000\000\000\000\010\000\016\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \006\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\010\000\255\255\000\000\000\000\000\000\002\000\
    \003\000\004\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\008\000\255\255\
    \255\255\255\255\255\255\255\255\000\000\009\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 12 "Code/Lexers_Parsers/lexer_simplex.mll"
                   ( token lexbuf )
# 120 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 1 ->
# 13 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( NOT )
# 125 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 2 ->
# 14 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( LPAREN )
# 130 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 3 ->
# 15 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( RPAREN )
# 135 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 4 ->
# 16 "Code/Lexers_Parsers/lexer_simplex.mll"
           ( OR )
# 140 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 5 ->
# 17 "Code/Lexers_Parsers/lexer_simplex.mll"
           ( AND )
# 145 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 6 ->
# 18 "Code/Lexers_Parsers/lexer_simplex.mll"
          ( IMPLY )
# 150 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 7 ->
let
# 19 "Code/Lexers_Parsers/lexer_simplex.mll"
           s
# 156 "Code/Lexers_Parsers/lexer_simplex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 19 "Code/Lexers_Parsers/lexer_simplex.mll"
               ( RAT (Num.num_of_string s) )
# 160 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 8 ->
let
# 20 "Code/Lexers_Parsers/lexer_simplex.mll"
               s
# 166 "Code/Lexers_Parsers/lexer_simplex.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 20 "Code/Lexers_Parsers/lexer_simplex.mll"
                  ( VAR (int_of_string s) )
# 170 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 9 ->
# 21 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( PLUS )
# 175 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 10 ->
# 22 "Code/Lexers_Parsers/lexer_simplex.mll"
           ( LEQ )
# 180 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 11 ->
# 23 "Code/Lexers_Parsers/lexer_simplex.mll"
          ( GEQ )
# 185 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 12 ->
# 24 "Code/Lexers_Parsers/lexer_simplex.mll"
          ( LT )
# 190 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 13 ->
# 25 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( GT )
# 195 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 14 ->
# 26 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( EQU )
# 200 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 15 ->
# 27 "Code/Lexers_Parsers/lexer_simplex.mll"
          ( DIS )
# 205 "Code/Lexers_Parsers/lexer_simplex.ml"

  | 16 ->
# 28 "Code/Lexers_Parsers/lexer_simplex.mll"
         ( EOF )
# 210 "Code/Lexers_Parsers/lexer_simplex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

